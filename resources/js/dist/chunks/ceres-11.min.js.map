{"version":3,"sources":["webpack:///./node_modules/Ceres/resources/js/src/app/mixins/buttonSizeProperty.mixin.js","webpack:///./node_modules/Ceres/resources/js/src/app/components/newsletter/NewsletterUnsubscribeInput.vue?92c6","webpack:///./node_modules/Ceres/resources/js/src/app/components/newsletter/NewsletterUnsubscribeInput.vue?e8b3","webpack:///node_modules/Ceres/resources/js/src/app/components/newsletter/NewsletterUnsubscribeInput.vue","webpack:///./node_modules/Ceres/resources/js/src/app/components/newsletter/NewsletterUnsubscribeInput.vue"],"names":["BUTTON_SIZES","LEGACY_CLASS_MAP","ButtonSizePropertyMixin","props","buttonSize","type","String","default","validator","value","Object","keys","indexOf","computed","hasOwnProperty","this","render","_vm","_h","$createElement","_c","_self","attrs","id","_uid","method","on","submit","$event","preventDefault","validateData","staticClass","for","_v","_s","$translate","directives","name","rawName","email","expression","autocomplete","domProps","input","target","composing","honeypot","tabindex","class","buttonSizeClass","disabled","isDisabled","click","icon","loading","_withStripped","mixins","data","methods","ValidationService","validate","$","done","save","fail","invalidFields","markInvalidFields","urlParams","UrlService","getUrlParams","document","location","search","folderId","ApiService","del","NotificationService","success","closeAfter","resetInputs","error","always","component","options","__file"],"mappings":"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","file":"chunks/ceres-11.min.js","sourcesContent":["const BUTTON_SIZES = [\"btn-sm\", \"btn-lg\"];\n\nconst LEGACY_CLASS_MAP = {\n    \"sm\": \"btn-sm\",\n    \"md\": \"\",\n    \"lg\": \"btn-lg\"\n};\n\nexport const ButtonSizePropertyMixin =\n{\n    props: {\n        buttonSize:\n        {\n            type: [String, null],\n            default: null,\n            validator: value =>\n            {\n                return [\n                    \"\",\n                    ...BUTTON_SIZES,\n                    ...Object.keys(LEGACY_CLASS_MAP)\n                ].indexOf(value) !== -1;\n            }\n        }\n    },\n\n    computed: {\n        buttonSizeClass()\n        {\n            if (LEGACY_CLASS_MAP.hasOwnProperty(this.buttonSize))\n            {\n                return LEGACY_CLASS_MAP[this.buttonSize];\n            }\n\n            return this.buttonSize;\n        }\n    }\n};\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"form\",\n    {\n      attrs: {\n        id: \"newsletter-unsubscribe-input-form_\" + _vm._uid,\n        method: \"post\"\n      },\n      on: {\n        submit: function($event) {\n          $event.preventDefault()\n          return _vm.validateData($event)\n        }\n      }\n    },\n    [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12\" }, [\n          _c(\n            \"div\",\n            {\n              staticClass: \"input-unit mt-3\",\n              attrs: { \"data-validate\": \"mail\" }\n            },\n            [\n              _c(\"label\", { attrs: { for: \"email-input-id\" } }, [\n                _vm._v(\n                  _vm._s(_vm.$translate(\"Ceres::Template.newsletterEmail\"))\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.email,\n                    expression: \"email\"\n                  }\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"email\",\n                  name: \"email\",\n                  autocomplete: \"email\",\n                  id: \"email-input-id\"\n                },\n                domProps: { value: _vm.email },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.email = $event.target.value\n                  }\n                }\n              })\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.honeypot,\n                expression: \"honeypot\"\n              }\n            ],\n            staticClass: \"honey\",\n            attrs: {\n              type: \"text\",\n              name: \"username\",\n              autocomplete: \"off\",\n              tabindex: \"-1\"\n            },\n            domProps: { value: _vm.honeypot },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.honeypot = $event.target.value\n              }\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\"span\", { staticClass: \"input-group-btn\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass:\n                  \"btn btn-primary btn-appearance float-right btn-medium btn-xs-max-width\",\n                class: _vm.buttonSizeClass,\n                attrs: { type: \"submit\", disabled: _vm.isDisabled },\n                on: { click: _vm.validateData }\n              },\n              [\n                _c(\"icon\", {\n                  attrs: { icon: \"paper-plane-o\", loading: _vm.isDisabled }\n                }),\n                _vm._v(\" \"),\n                _c(\"span\", [\n                  _vm._v(\n                    _vm._s(\n                      _vm.$translate(\n                        \"Ceres::Template.newsletterUnsubscribeButtonLabel\"\n                      )\n                    )\n                  )\n                ])\n              ],\n              1\n            )\n          ])\n        ])\n      ])\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../../../vue-loader/lib/index.js??vue-loader-options!./NewsletterUnsubscribeInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../vue-loader/lib/index.js??vue-loader-options!./NewsletterUnsubscribeInput.vue?vue&type=script&lang=js&\"","<template>\n    <form :id=\"'newsletter-unsubscribe-input-form_' + _uid\" method=\"post\" @submit.prevent=\"validateData\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"input-unit mt-3\" data-validate=\"mail\">\n                    <label for=\"email-input-id\">{{ $translate(\"Ceres::Template.newsletterEmail\") }}</label>\n                    <input type=\"email\" name=\"email\" autocomplete=\"email\" class=\"form-control\" id=\"email-input-id\" v-model=\"email\">\n                </div>\n\n                <input class=\"honey\" type=\"text\" name=\"username\" autocomplete=\"off\" tabindex=\"-1\" v-model=\"honeypot\">\n\n                <span class=\"input-group-btn\">\n                    <button type=\"submit\" class=\"btn btn-primary btn-appearance float-right btn-medium btn-xs-max-width\" @click=\"validateData\" :disabled=\"isDisabled\" :class=\"buttonSizeClass\">\n                        <icon icon=\"paper-plane-o\" :loading=\"isDisabled\"></icon>\n                        <span>{{ $translate(\"Ceres::Template.newsletterUnsubscribeButtonLabel\") }}</span>\n                    </button>\n                </span>\n            </div>\n        </div>\n    </form>\n</template>\n\n<script>\nimport ApiService from \"../../services/ApiService\";\nimport ValidationService from \"../../services/ValidationService\";\nimport NotificationService from \"../../services/NotificationService\";\nimport UrlService from \"../../services/UrlService\";\n\nimport { isUndefined } from \"../../helper/utils\";\nimport { ButtonSizePropertyMixin } from \"../../mixins/buttonSizeProperty.mixin\";\n\nexport default {\n\n    mixins: [ButtonSizePropertyMixin],\n\n    data()\n    {\n        return {\n            email: \"\",\n            isDisabled: false,\n            honeypot: \"\"\n        };\n    },\n\n    methods: {\n        validateData()\n        {\n            this.isDisabled = true;\n\n            ValidationService.validate($(\"#newsletter-unsubscribe-input-form_\" + this._uid))\n                .done(() =>\n                {\n                    this.save();\n                })\n                .fail(invalidFields =>\n                {\n                    ValidationService.markInvalidFields(invalidFields, \"error\");\n\n                    this.isDisabled = false;\n                });\n        },\n\n        save()\n        {\n            const urlParams = UrlService.getUrlParams(document.location.search);\n\n            if (isUndefined( urlParams.folderId ))\n            {\n                urlParams.folderId = 0;\n            }\n\n            ApiService.del(\"/rest/io/customer/newsletter/\" + this.email, { \"emailFolder\": urlParams.folderId, \"honeypot\": this.honeypot })\n                .done(() =>\n                {\n                    NotificationService.success(\n                        this.$translate(\"Ceres::Template.newsletterOptOutSuccessMessage\")\n                    ).closeAfter(3000);\n                    this.resetInputs();\n                })\n                .fail(() =>\n                {\n                    NotificationService.error(\n                        this.$translate(\"Ceres::Template.newsletterOptOutErrorMessage\")\n                    ).closeAfter(5000);\n                })\n                .always(() =>\n                {\n                    this.isDisabled = false;\n                });\n        },\n\n        resetInputs()\n        {\n            this.email = \"\";\n        }\n    }\n}\n</script>\n","import { render, staticRenderFns } from \"./NewsletterUnsubscribeInput.vue?vue&type=template&id=56b5b1bc&\"\nimport script from \"./NewsletterUnsubscribeInput.vue?vue&type=script&lang=js&\"\nexport * from \"./NewsletterUnsubscribeInput.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/alex/Documents/GitHub/pp-arche/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('56b5b1bc')) {\n      api.createRecord('56b5b1bc', component.options)\n    } else {\n      api.reload('56b5b1bc', component.options)\n    }\n    module.hot.accept(\"./NewsletterUnsubscribeInput.vue?vue&type=template&id=56b5b1bc&\", function () {\n      api.rerender('56b5b1bc', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"node_modules/Ceres/resources/js/src/app/components/newsletter/NewsletterUnsubscribeInput.vue\"\nexport default component.exports"],"sourceRoot":""}