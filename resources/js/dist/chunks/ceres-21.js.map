{"version":3,"sources":["webpack:///./node_modules/Ceres/resources/js/src/app/components/common/GoogleMaps.vue","webpack:///./node_modules/Ceres/resources/js/src/app/components/common/GoogleMaps.vue?5b6f","webpack:///./node_modules/Ceres/resources/js/src/app/components/common/GoogleMaps.vue?558b","webpack:///node_modules/Ceres/resources/js/src/app/components/common/GoogleMaps.vue","webpack:///./node_modules/Ceres/resources/js/src/app/components/common/GoogleMaps.vue?f296"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAyF;AAC3B;AACL;;;AAGzD;AAC4F;AAC5F,gBAAgB,8FAAU;AAC1B,EAAE,gFAAM;AACR,EAAE,qFAAM;AACR,EAAE,8FAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAA+H,CAAgB,0LAAG,EAAC,C;;;;;;;;;;;;ACAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACS2D;AACJ;;AAExC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,uEAAiB;AACtC;AACA;AACA;AACA,wBAAwB,uEAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2EAAa;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC3JD;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA","file":"chunks/ceres-21.js","sourcesContent":["import { render, staticRenderFns } from \"./GoogleMaps.vue?vue&type=template&id=9bb5c930&\"\nimport script from \"./GoogleMaps.vue?vue&type=script&lang=js&\"\nexport * from \"./GoogleMaps.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/alex/Documents/GitHub/own-Git-waldorfweb/Waldorfshop2/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('9bb5c930')) {\n      api.createRecord('9bb5c930', component.options)\n    } else {\n      api.reload('9bb5c930', component.options)\n    }\n    module.hot.accept(\"./GoogleMaps.vue?vue&type=template&id=9bb5c930&\", function () {\n      api.rerender('9bb5c930', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"node_modules/Ceres/resources/js/src/app/components/common/GoogleMaps.vue\"\nexport default component.exports","import mod from \"-!../../../../../../../vue-loader/lib/index.js??vue-loader-options!./GoogleMaps.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../vue-loader/lib/index.js??vue-loader-options!./GoogleMaps.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../../vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../vue-loader/lib/index.js??vue-loader-options!./GoogleMaps.vue?vue&type=template&id=9bb5c930&\"","<template>\n    <div :class=\"aspectClass\" class=\"maps-component position-relative\" ref=\"googleMapsContainer\">\n        <div v-if=\"scriptBlocked\">\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { whenConsented } from \"../../helper/whenConsented\";\nimport { isNullOrUndefined } from \"../../helper/utils\";\n\nexport default {\n    props: {\n        lat:\n        {\n            type: Number\n        },\n        lng:\n        {\n            type: Number\n        },\n        zoom:\n        {\n            type: Number,\n            default: 16\n        },\n        maptype:\n        {\n            type: String,\n            default: \"roadmap\"\n        },\n        aspectRatio:\n        {\n            type: String,\n            default: \"3-1\"\n        }\n    },\n\n    data: function()\n    {\n        return {\n            scriptBlocked: true\n        };\n    },\n\n    computed:\n        {\n            coordinates()\n            {\n                const isLatValid = !isNaN(this.lat) && this.lat > -90 && this.lat < 90;\n                const isLngValid = !isNaN(this.lng) && this.lng > -180 && this.lng < 180;\n\n                if (isLatValid && isLngValid)\n                {\n                    return {\n                        lat: this.lat,\n                        lng: this.lng\n                    };\n                }\n\n                return null;\n            },\n\n            aspectClass()\n            {\n                return \"prop-\" + this.aspectRatio;\n            }\n        },\n\n    mounted()\n    {\n        this.$nextTick(() =>\n        {\n            this.createScript()\n                .then(() =>\n                {\n                    this.initializeMap();\n                })\n                .catch(() =>\n                {\n                    // Do nothing\n                });\n        });\n    },\n\n    methods:\n    {\n        createScript()\n        {\n            return new Promise((resolve, reject) =>\n            {\n                const script = document.querySelector(\"script#google-maps-api\");\n\n                if (!isNullOrUndefined(script))\n                {\n                    // script already injected...\n                    this.scriptBlocked = false;\n                    if (isNullOrUndefined(window.google))\n                    {\n                        // ...but not loaded yet\n                        script.addEventListener(\"load\", () => resolve(script), false);\n                    }\n                    else\n                    {\n                        // ..and fully loaded\n                        resolve(script);\n                    }\n                }\n                else\n                {\n                    // script not loaded\n                    whenConsented(\n                        \"media.googleMaps\",\n                        () =>\n                        {\n                            this.scriptBlocked = false;\n                            const script = document.createElement(\"script\");\n\n                            script.type = \"text/javascript\";\n                            script.id = \"google-maps-api\";\n                            script.src = `https://maps.googleapis.com/maps/api/js?key=${App.config.global.googleMapsApiKey}`;\n\n                            script.addEventListener(\"load\", () => resolve(script), false);\n                            script.addEventListener(\"error\", () => reject(script), false);\n\n                            document.body.appendChild(script);\n                        },\n                        () =>\n                        {\n                            this.scriptBlocked = true;\n                        });\n                }\n            });\n        },\n\n        initializeMap()\n        {\n            if (this.coordinates)\n            {\n                const map = new google.maps.Map(this.$refs.googleMapsContainer,\n                    {\n                        center: this.coordinates,\n                        zoom  : this.zoom,\n                        mapTypeId: this.maptype\n                    });\n\n                new google.maps.Marker(\n                    {\n                        map: map,\n                        position: this.coordinates\n                    });\n            }\n        }\n    }\n}\n</script>\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      ref: \"googleMapsContainer\",\n      staticClass: \"maps-component position-relative\",\n      class: _vm.aspectClass\n    },\n    [_vm.scriptBlocked ? _c(\"div\", [_vm._t(\"default\")], 2) : _vm._e()]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"sourceRoot":""}