{"version":3,"sources":["webpack:///./node_modules/Ceres/resources/js/src/app/components/item/QuantityInput.vue?4cc4","webpack:///./node_modules/Ceres/resources/js/src/app/components/item/QuantityInput.vue?99c7","webpack:///node_modules/Ceres/resources/js/src/app/components/item/QuantityInput.vue","webpack:///./node_modules/Ceres/resources/js/src/app/components/item/QuantityInput.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","attrs","type","disabled","waiting","domProps","value","displayValue","on","change","$event","setValue","target","_v","directives","name","rawName","isMaximum","compMax","expression","class","useAppearance","title","maximumHint","click","increaseValue","isMinimum","minimumHint","decreaseValue","_withStripped","props","Number","required","timeout","default","min","max","interval","Boolean","variationId","compValue","compMin","compInterval","compDecimals","onValueChanged","debounce","$emit","fetchQuantityFromBasket","computed","itemSetVariationId","totalQuantity","$store","state","basket","items","forEach","basketItem","setComponents","setComponent","quantity","basketObject","find","variations","$translate","$options","filters","numberFormat","itemSetId","getters","variation","id","basketItems","watch","newValue","oldValue","deep","methods","replace","App","decimalSeparator","parseFloat","isNaN","diff","$refs","quantityInputField","variationBasketQuantity","component","options","__file"],"mappings":"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","file":"chunks/ceres-34.min.js","sourcesContent":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"qty-box d-flex h-100\" }, [\n    _c(\"input\", {\n      ref: \"quantityInputField\",\n      staticClass: \"qty-input text-center\",\n      attrs: { type: \"text\", disabled: _vm.waiting },\n      domProps: { value: _vm.displayValue },\n      on: {\n        change: function($event) {\n          return _vm.setValue($event.target.value)\n        }\n      }\n    }),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"qty-btn-container d-flex flex-column\" }, [\n      _c(\n        \"button\",\n        {\n          directives: [\n            {\n              name: \"tooltip\",\n              rawName: \"v-tooltip\",\n              value: _vm.isMaximum && _vm.compMax !== 0,\n              expression: \"isMaximum && compMax !== 0\"\n            }\n          ],\n          staticClass:\n            \"btn qty-btn flex-fill d-flex justify-content-center p-0\",\n          class: {\n            disabled: _vm.isMaximum || _vm.waiting,\n            \"btn-appearance\": _vm.useAppearance\n          },\n          attrs: {\n            \"data-toggle\": \"tooltip\",\n            \"data-placement\": \"top\",\n            title: _vm.maximumHint\n          },\n          on: {\n            click: function($event) {\n              return _vm.increaseValue()\n            }\n          }\n        },\n        [\n          _c(\"i\", {\n            staticClass: \"fa fa-plus default-float\",\n            attrs: { \"aria-hidden\": \"true\" }\n          })\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"button\",\n        {\n          directives: [\n            {\n              name: \"tooltip\",\n              rawName: \"v-tooltip\",\n              value: _vm.isMinimum && _vm.compMax !== 0,\n              expression: \"isMinimum && compMax !== 0\"\n            }\n          ],\n          staticClass:\n            \"btn qty-btn flex-fill d-flex justify-content-center p-0\",\n          class: {\n            disabled: _vm.isMinimum || _vm.waiting,\n            \"btn-appearance\": _vm.useAppearance\n          },\n          attrs: {\n            \"data-toggle\": \"tooltip\",\n            \"data-placement\": \"bottom\",\n            title: _vm.minimumHint\n          },\n          on: {\n            click: function($event) {\n              return _vm.decreaseValue()\n            }\n          }\n        },\n        [\n          _c(\"i\", {\n            staticClass: \"fa fa-minus default-float\",\n            attrs: { \"aria-hidden\": \"true\" }\n          })\n        ]\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../../../vue-loader/lib/index.js??vue-loader-options!./QuantityInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../vue-loader/lib/index.js??vue-loader-options!./QuantityInput.vue?vue&type=script&lang=js&\"","<template>\n    <div class=\"qty-box d-flex h-100\">\n        <input class=\"qty-input text-center\"\n               type=\"text\"\n               :value=\"displayValue\"\n               @change=\"setValue($event.target.value)\"\n               :disabled=\"waiting\"\n               ref=\"quantityInputField\">\n\n        <div class=\"qty-btn-container d-flex flex-column\">\n            <button class=\"btn qty-btn flex-fill d-flex justify-content-center p-0\"\n                 @click=\"increaseValue()\"\n                 :class=\"{ 'disabled': isMaximum || waiting, 'btn-appearance': useAppearance }\"\n                 v-tooltip=\"isMaximum && compMax !== 0\"\n                 data-toggle=\"tooltip\"\n                 data-placement=\"top\"\n                 :title=\"maximumHint\">\n                <i class=\"fa fa-plus default-float\" aria-hidden=\"true\"></i>\n            </button>\n\n            <button class=\"btn qty-btn flex-fill d-flex justify-content-center p-0\"\n                 @click=\"decreaseValue()\"\n                 :class=\"{ 'disabled': isMinimum || waiting, 'btn-appearance': useAppearance }\"\n                 v-tooltip=\"isMinimum && compMax !== 0\"\n                 data-toggle=\"tooltip\"\n                 data-placement=\"bottom\"\n                 :title=\"minimumHint\">\n                <i class=\"fa fa-minus default-float\" aria-hidden=\"true\"></i>\n            </button>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { floatLength, formatFloat, limit } from \"../../helper/number\";\nimport { defaultValue, isDefined, isNullOrUndefined } from \"../../helper/utils\";\nimport { debounce } from \"../../helper/debounce\";\nimport { mapState } from \"vuex\";\n\nexport default {\n    name: \"quantity-input\",\n\n    props: {\n        value: {\n            type: Number,\n            required: true\n        },\n        timeout: {\n            type: Number,\n            required: false,\n            default: 500\n        },\n        min: {\n            type: Number,\n            required: false,\n            default: 0\n        },\n        max: {\n            type: Number,\n            required: false\n        },\n        interval: {\n            type: Number,\n            required: false,\n            default: 1\n        },\n        waiting: {\n            type: Boolean,\n            required: false\n        },\n        variationId: {\n            type: Number,\n            required: false\n        },\n        useAppearance: Boolean\n    },\n\n    data()\n    {\n        return {\n            compValue:      this.value,\n            compMin:        this.min,\n            compMax:        this.max,\n            compInterval:   this.interval,\n            compDecimals:   0,\n            onValueChanged: null\n        };\n    },\n\n    created()\n    {\n        this.compInterval = defaultValue(this.compInterval, 1);\n        this.compInterval = this.compInterval === 0 ? 1 : this.compInterval;\n\n        this.compDecimals = floatLength(this.compInterval);\n\n        this.onValueChanged = debounce(() =>\n        {\n            this.$emit(\"quantity-change\", this.compValue);\n        }, defaultValue(this.timeout, 500));\n\n        if (!isNullOrUndefined(this.variationId))\n        {\n            this.fetchQuantityFromBasket();\n        }\n    },\n\n    computed:\n    {\n        variationBasketQuantity()\n        {\n            if (isNullOrUndefined(this.variationId))\n            {\n                return 0;\n            }\n\n            if (this.itemSetVariationId > 0 && this.variationId !== this.itemSetVariationId)\n            {\n                let totalQuantity = 0;\n\n                this.$store.state.basket.items.forEach((basketItem) =>\n                {\n                    if (basketItem.variationId === this.itemSetVariationId)\n                    {\n                        basketItem.setComponents.forEach((setComponent) =>\n                        {\n                            if (setComponent.variationId === this.variationId)\n                            {\n                                totalQuantity += setComponent.quantity;\n                            }\n                        });\n                    }\n                });\n\n                return totalQuantity;\n            }\n            else\n            {\n                const basketObject = this.$store.state.basket.items.find(variations => variations.variationId === this.variationId);\n\n                return basketObject ? basketObject.quantity : 0;\n            }\n        },\n\n        isMinimum()\n        {\n            return isDefined(this.compMin) && (this.compValue - this.compInterval) < this.compMin;\n        },\n\n        isMaximum()\n        {\n            return isDefined(this.compMax) && (this.compValue + this.compInterval) > this.compMax;\n        },\n\n        minimumHint()\n        {\n            return this.$translate(\n                \"Ceres::Template.singleItemQuantityMin\",\n                {\n                    min: this.min\n                }\n            );\n        },\n\n        maximumHint()\n        {\n            return this.$translate(\n                \"Ceres::Template.singleItemQuantityMax\",\n                {\n                    max: this.max\n                }\n            );\n        },\n\n        displayValue()\n        {\n            return this.$options.filters.numberFormat(this.compValue);\n        },\n\n        itemSetVariationId()\n        {\n            if (this.$store.state.items.itemSetId > 0)\n            {\n                return this.$store.getters[`${this.$store.state.items.itemSetId}/currentItemVariation`].variation.id;\n            }\n\n            return 0;\n        },\n\n        ...mapState({\n            basketItems: state => state.basket.items\n        })\n    },\n\n    watch:\n    {\n        basketItems:\n        {\n            handler(newValue, oldValue)\n            {\n                if (isDefined(this.variationId))\n                {\n                    this.fetchQuantityFromBasket();\n                }\n            },\n            deep: true\n        },\n\n        min(newValue)\n        {\n            this.compMin = newValue;\n            this.fetchQuantityFromBasket();\n        },\n\n        max(newValue)\n        {\n            this.compMax = newValue;\n            this.fetchQuantityFromBasket();\n        },\n\n        value(newValue, oldValue)\n        {\n            if (newValue !== oldValue)\n            {\n                this.setValue(newValue);\n            }\n        }\n    },\n\n    methods:\n    {\n        increaseValue()\n        {\n            const newValue = formatFloat(this.compValue + this.compInterval, this.compDecimals);\n\n            if ((isNullOrUndefined(this.compMax) || newValue <= this.compMax) && !this.waiting)\n            {\n                this.setValue(newValue);\n            }\n        },\n\n        decreaseValue()\n        {\n            const newValue = formatFloat(this.compValue - this.compInterval, this.compDecimals);\n\n            if ((isNullOrUndefined(this.compMin) || newValue >= this.compMin) && !this.waiting)\n            {\n                this.setValue(newValue);\n            }\n        },\n\n        setValue(value)\n        {\n            // consider the configured decimal seperator (if the input is typed in the input field)\n            if (typeof value === \"string\")\n            {\n                value = value.replace(App.decimalSeparator || \",\", \".\");\n            }\n\n            value = parseFloat(value);\n            if (isNaN(value))\n            {\n                value = defaultValue(this.compMin, 1);\n            }\n\n            // limit new value to min/ max value\n            value = limit(value, this.compMin, this.compMax);\n\n            // make sure, new value is an even multiple of interval\n            const diff = formatFloat(value % this.compInterval, this.compDecimals, true);\n\n            if (diff > 0 && diff !== this.compInterval)\n            {\n                if (diff < this.compInterval / 2)\n                {\n                    value -= diff;\n                }\n                else\n                {\n                    value += this.compInterval - diff;\n                }\n                value = limit(value, this.compMin, this.compMax);\n            }\n\n            // cut fraction\n            value = formatFloat(value, this.compDecimals);\n\n            if (value !== this.compValue)\n            {\n                this.compValue = value;\n                this.onValueChanged();\n            }\n            else if (!isNullOrUndefined(this.$refs.quantityInputField))\n            {\n                this.$refs.quantityInputField.value = value;\n            }\n        },\n\n        fetchQuantityFromBasket()\n        {\n            if (!isNullOrUndefined(this.min) && this.variationBasketQuantity >= this.min)\n            {\n                // minimum quantity already in basket\n                this.compMin = this.compInterval;\n            }\n            else if (this.variationBasketQuantity === 0)\n            {\n                this.compMin = this.min;\n            }\n\n            if (!isNullOrUndefined(this.max))\n            {\n                // decrease maximum quantity by quantity of variations already in basket\n                this.compMax = this.max - this.variationBasketQuantity;\n\n                if (this.variationBasketQuantity + this.compInterval > this.max)\n                {\n                    this.compMin = 0;\n                    this.compMax = 0;\n                    this.$emit(\"out-of-stock\", true);\n                }\n                else\n                {\n                    this.$emit(\"out-of-stock\", false);\n                }\n            }\n\n            this.setValue(this.compMin);\n        }\n    }\n}\n</script>\n","import { render, staticRenderFns } from \"./QuantityInput.vue?vue&type=template&id=5d08d642&\"\nimport script from \"./QuantityInput.vue?vue&type=script&lang=js&\"\nexport * from \"./QuantityInput.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/alex/Documents/GitHub/own-Git-waldorfweb/Waldorfshop2/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('5d08d642')) {\n      api.createRecord('5d08d642', component.options)\n    } else {\n      api.reload('5d08d642', component.options)\n    }\n    module.hot.accept(\"./QuantityInput.vue?vue&type=template&id=5d08d642&\", function () {\n      api.rerender('5d08d642', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"node_modules/Ceres/resources/js/src/app/components/item/QuantityInput.vue\"\nexport default component.exports"],"sourceRoot":""}